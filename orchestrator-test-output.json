{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":5,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1744979874972,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["AgentOrchestrator"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should launch a real agent and reflect health","invocations":1,"location":{"column":3,"line":17},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should launch a real agent and reflect health"},{"ancestorTitles":["AgentOrchestrator"],"duration":33,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should stop a real agent and reflect health","invocations":1,"location":{"column":3,"line":34},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should stop a real agent and reflect health"},{"ancestorTitles":["AgentOrchestrator"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should list all orchestrated agents","invocations":1,"location":{"column":3,"line":51},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should list all orchestrated agents"},{"ancestorTitles":["AgentOrchestrator"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should review a developer implementation with QC Agent","invocations":1,"location":{"column":3,"line":64},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should review a developer implementation with QC Agent"},{"ancestorTitles":["AgentOrchestrator"],"duration":17,"failureDetails":[{"matcherResult":{"actual":"pending","expected":"crashed","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"crashed\"\u001b[39m\nReceived: \u001b[31m\"pending\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"crashed\"\u001b[39m\nReceived: \u001b[31m\"pending\"\u001b[39m\n    at Object.<anonymous> (C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\agentOrchestrator.test.ts:93:52)"],"fullName":"AgentOrchestrator should auto-recover a crashed agent and reflect live state","invocations":1,"location":{"column":3,"line":81},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should auto-recover a crashed agent and reflect live state"}],"endTime":1744979877200,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAgentOrchestrator › should auto-recover a crashed agent and reflect live state\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"crashed\"\u001b[39m\n    Received: \u001b[31m\"pending\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 91 |\u001b[39m     \u001b[36mawait\u001b[39m agentManager\u001b[33m.\u001b[39mstopAgent(agentConfig\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     \u001b[90m// Orchestrator should now see the agent as crashed\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 93 |\u001b[39m     expect(orchestrator\u001b[33m.\u001b[39mgetHealth(agentConfig\u001b[33m.\u001b[39mid))\u001b[33m.\u001b[39mtoBe(\u001b[32m'crashed'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m     \u001b[90m// Now trigger orchestrator auto-recovery\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m     \u001b[36mconst\u001b[39m recoveryResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m orchestrator\u001b[33m.\u001b[39mrestartAgent(agentConfig\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 96 |\u001b[39m     expect(recoveryResult)\u001b[33m.\u001b[39mtoBe(\u001b[32m'recovered'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/orchestration/agentOrchestrator.test.ts\u001b[39m\u001b[0m\u001b[2m:93:52)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\agentOrchestrator.test.ts","startTime":1744979875880,"status":"failed","summary":""}],"wasInterrupted":false}
