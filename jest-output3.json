{"numFailedTestSuites":8,"numFailedTests":11,"numPassedTestSuites":21,"numPassedTests":86,"numPendingTestSuites":0,"numPendingTests":2,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":29,"numTotalTests":99,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1745179282679,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["/api/agents/[id] API"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/[id] API GET returns agent details","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns agent details"},{"ancestorTitles":["/api/agents/[id] API"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/[id] API DELETE stops the agent and marks it as crashed","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"DELETE stops the agent and marks it as crashed"},{"ancestorTitles":["/api/agents/[id] API"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/[id] API DELETE returns 404 for missing agent","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"DELETE returns 404 for missing agent"}],"endTime":1745179288209,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\agents\\[id].test.ts","startTime":1745179285424,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":775,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalled (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\chat.spec.ts:28:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"text message → stores, calls OpenAI, replies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"text message → stores, calls OpenAI, replies"}],"endTime":1745179288221,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mtext message → stores, calls OpenAI, replies\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m   expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 28 |\u001b[39m   expect(insertMessage)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   expect(mockedAxios\u001b[33m.\u001b[39mpost)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m              \u001b[90m// OpenAI\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m   \u001b[36mconst\u001b[39m call \u001b[33m=\u001b[39m mockedAxios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mfind(([url]) \u001b[33m=>\u001b[39m isSendMessage(url))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/chat.spec.ts\u001b[39m\u001b[0m\u001b[2m:28:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\chat.spec.ts","startTime":1745179285543,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":765,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\upload.spec.ts:40:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"document upload → stored & acked","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"document upload → stored & acked"}],"endTime":1745179288231,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mdocument upload → stored & acked\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m   expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m   \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 40 |\u001b[39m   expect(body\u001b[33m.\u001b[39mok)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m   expect(body\u001b[33m.\u001b[39mfile_url)\u001b[33m.\u001b[39mtoContain(\u001b[32m'mock.png'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/upload.spec.ts\u001b[39m\u001b[0m\u001b[2m:40:19)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\upload.spec.ts","startTime":1745179285509,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":761,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '1')\n    at Object.<anonymous> (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\errors.spec.ts:37:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"informs user when Supabase insert fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"informs user when Supabase insert fails"},{"ancestorTitles":[],"duration":158,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/OpenAI down/i\u001b[39m\nReceived string:  \u001b[31m\"Missing sender or chat information\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/OpenAI down/i\u001b[39m\nReceived string:  \u001b[31m\"Missing sender or chat information\"\u001b[39m\n    at Object.toMatch (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\errors.spec.ts:56:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"informs user when OpenAI fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"informs user when OpenAI fails"}],"endTime":1745179288343,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1minforms user when Supabase insert fails\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '1')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m   \u001b[36mconst\u001b[39m call \u001b[33m=\u001b[39m mockedAxios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mfind(([url]) \u001b[33m=>\u001b[39m isSendMessage(url))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 37 |\u001b[39m   expect(call\u001b[33m!\u001b[39m[\u001b[35m1\u001b[39m])\u001b[33m.\u001b[39mtoEqual(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m     expect\u001b[33m.\u001b[39mobjectContaining({ chat_id\u001b[33m:\u001b[39m \u001b[33mCHAT_ID\u001b[39m\u001b[33m,\u001b[39m text\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mstringMatching(\u001b[35m/Supabase down/i\u001b[39m) })\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m   )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/errors.spec.ts\u001b[39m\u001b[0m\u001b[2m:37:15)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1minforms user when OpenAI fails\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected pattern: \u001b[32m/OpenAI down/i\u001b[39m\n    Received string:  \u001b[31m\"Missing sender or chat information\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 |\u001b[39m   expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m   \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 56 |\u001b[39m   expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoMatch(\u001b[35m/OpenAI down/i\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m   \u001b[36mconst\u001b[39m call \u001b[33m=\u001b[39m mockedAxios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mfind(([url]) \u001b[33m=>\u001b[39m isSendMessage(url))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m   expect(call\u001b[33m!\u001b[39m[\u001b[35m1\u001b[39m])\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toMatch (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/errors.spec.ts\u001b[39m\u001b[0m\u001b[2m:56:22)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\errors.spec.ts","startTime":1745179285458,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Agent control commands"],"duration":862,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at toBeDefined (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\agent.spec.ts:43:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Agent control commands /status responds with confirmation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"/status responds with confirmation"},{"ancestorTitles":["Agent control commands"],"duration":146,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at toBeDefined (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\agent.spec.ts:43:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Agent control commands /stop test-agent responds with confirmation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"/stop test-agent responds with confirmation"},{"ancestorTitles":["Agent control commands"],"duration":124,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at toBeDefined (C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\agent.spec.ts:43:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Agent control commands /restart test-agent responds with confirmation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"/restart test-agent responds with confirmation"}],"endTime":1745179288365,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAgent control commands › /status responds with confirmation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m     \u001b[36mconst\u001b[39m sendMessageCall \u001b[33m=\u001b[39m mockedAxios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mfind(([url]) \u001b[33m=>\u001b[39m isSendMessage(url))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m     expect(sendMessageCall)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     expect(sendMessageCall\u001b[33m!\u001b[39m[\u001b[35m1\u001b[39m])\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       \u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39mobjectContaining({ chat_id\u001b[33m:\u001b[39m \u001b[33mCHAT_ID\u001b[39m\u001b[33m,\u001b[39m text\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mstringMatching(regex) }))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/agent.spec.ts\u001b[39m\u001b[0m\u001b[2m:43:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAgent control commands › /stop test-agent responds with confirmation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m     \u001b[36mconst\u001b[39m sendMessageCall \u001b[33m=\u001b[39m mockedAxios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mfind(([url]) \u001b[33m=>\u001b[39m isSendMessage(url))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m     expect(sendMessageCall)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     expect(sendMessageCall\u001b[33m!\u001b[39m[\u001b[35m1\u001b[39m])\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       \u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39mobjectContaining({ chat_id\u001b[33m:\u001b[39m \u001b[33mCHAT_ID\u001b[39m\u001b[33m,\u001b[39m text\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mstringMatching(regex) }))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/agent.spec.ts\u001b[39m\u001b[0m\u001b[2m:43:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAgent control commands › /restart test-agent responds with confirmation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m     \u001b[36mconst\u001b[39m sendMessageCall \u001b[33m=\u001b[39m mockedAxios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mfind(([url]) \u001b[33m=>\u001b[39m isSendMessage(url))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m     expect(sendMessageCall)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     expect(sendMessageCall\u001b[33m!\u001b[39m[\u001b[35m1\u001b[39m])\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       \u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39mobjectContaining({ chat_id\u001b[33m:\u001b[39m \u001b[33mCHAT_ID\u001b[39m\u001b[33m,\u001b[39m text\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mstringMatching(regex) }))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/agent.spec.ts\u001b[39m\u001b[0m\u001b[2m:43:29)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\test\\agent.spec.ts","startTime":1745179285404,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/orchestrator-state"],"duration":51,"failureDetails":[],"failureMessages":[],"fullName":"/api/orchestrator-state returns live state with agents and logs","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"returns live state with agents and logs"}],"endTime":1745179288399,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\api\\orchestrator-state.test.ts","startTime":1745179285656,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/agent-logs API"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"/api/agent-logs API returns empty logs when there are no logs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns empty logs when there are no logs"},{"ancestorTitles":["/api/agent-logs API"],"duration":175,"failureDetails":[],"failureMessages":[],"fullName":"/api/agent-logs API returns logs for a running agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns logs for a running agent"}],"endTime":1745179288428,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\agent-logs.test.ts","startTime":1745179285575,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/orchestrator-state API"],"duration":66,"failureDetails":[],"failureMessages":[],"fullName":"/api/orchestrator-state API returns live state, health, and logs for all agents","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"returns live state, health, and logs for all agents"},{"ancestorTitles":["/api/orchestrator-state API"],"duration":15,"failureDetails":[{"matcherResult":{"actual":"healthy","expected":"running","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"running\"\u001b[39m\nReceived: \u001b[31m\"healthy\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"running\"\u001b[39m\nReceived: \u001b[31m\"healthy\"\u001b[39m\n    at Object.toBe (C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\orchestrator-state.test.ts:53:48)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"/api/orchestrator-state API reflects agent state changes (running, stopped, crashed)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"reflects agent state changes (running, stopped, crashed)"},{"ancestorTitles":["/api/orchestrator-state API"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"/api/orchestrator-state API returns live agent-to-agent messages in the messages field","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns live agent-to-agent messages in the messages field"}],"endTime":1745179288411,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m/api/orchestrator-state API › reflects agent state changes (running, stopped, crashed)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"running\"\u001b[39m\n    Received: \u001b[31m\"healthy\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 |\u001b[39m     \u001b[36mawait\u001b[39m handler(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m     \u001b[36mlet\u001b[39m data \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 53 |\u001b[39m     expect(data\u001b[33m.\u001b[39mhealth[\u001b[32m'orch-state-3'\u001b[39m]\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'running'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m     \u001b[90m// Stop the agent\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m     agentManager\u001b[33m.\u001b[39mstopAgent(\u001b[32m'orch-state-3'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m     agent \u001b[33m=\u001b[39m agentManager\u001b[33m.\u001b[39magents\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'orch-state-3'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mpages/api/orchestrator-state.test.ts\u001b[39m\u001b[0m\u001b[2m:53:48)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\orchestrator-state.test.ts","startTime":1745179285567,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/agents/agentLogs API"],"duration":54,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/agentLogs API GET returns logs for running agent","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"GET returns logs for running agent"},{"ancestorTitles":["/api/agents/agentLogs API"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/agentLogs API GET returns logs for stopped agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns logs for stopped agent"},{"ancestorTitles":["/api/agents/agentLogs API"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/agentLogs API GET returns empty logs for missing agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns empty logs for missing agent"}],"endTime":1745179288376,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\agents\\agentLogs.test.ts","startTime":1745179285587,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Telegram API Handler - agent control commands"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"Telegram API Handler - agent control commands handles /status command","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"handles /status command"},{"ancestorTitles":["Telegram API Handler - agent control commands"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Telegram API Handler - agent control commands handles /stop <id> command","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"handles /stop <id> command"},{"ancestorTitles":["Telegram API Handler - agent control commands"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Telegram API Handler - agent control commands handles /restart <id> command","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"handles /restart <id> command"},{"ancestorTitles":["Telegram API Handler - conversational and fallback flows"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Telegram API Handler - conversational and fallback flows responds with fallback/help for ambiguous input","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"status":"passed","title":"responds with fallback/help for ambiguous input"},{"ancestorTitles":["Telegram API Handler - conversational and fallback flows"],"duration":4,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/not found|couldn't find|unknown agent|try \\/help/i\u001b[39m\nReceived string:  \u001b[31m\"✅ Agent stopped: unknown-agent\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/not found|couldn't find|unknown agent|try \\/help/i\u001b[39m\nReceived string:  \u001b[31m\"✅ Agent stopped: unknown-agent\"\u001b[39m\n    at Object.toMatch (C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\api\\telegram-agent-commands.test.ts:114:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Telegram API Handler - conversational and fallback flows responds with error/help for unknown agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"responds with error/help for unknown agent"},{"ancestorTitles":["Telegram API Handler - conversational and fallback flows"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Telegram API Handler - conversational and fallback flows responds with clarification/help for malformed config update","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"responds with clarification/help for malformed config update"},{"ancestorTitles":["Telegram API Handler - conversational and fallback flows"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Telegram API Handler - conversational and fallback flows responds with clarification prompt for multi-turn/ambiguous agent action","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"responds with clarification prompt for multi-turn/ambiguous agent action"},{"ancestorTitles":["Sanity"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Sanity should run a basic test","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should run a basic test"}],"endTime":1745179288541,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTelegram API Handler - conversational and fallback flows › responds with error/help for unknown agent\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected pattern: \u001b[32m/not found|couldn't find|unknown agent|try \\/help/i\u001b[39m\n    Received string:  \u001b[31m\"✅ Agent stopped: unknown-agent\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 112 |\u001b[39m     \u001b[36mconst\u001b[39m calls \u001b[33m=\u001b[39m mockSendTelegramMessage\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m     expect(calls\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 114 |\u001b[39m     expect(calls[\u001b[35m0\u001b[39m][\u001b[35m1\u001b[39m])\u001b[33m.\u001b[39mtoMatch(\u001b[35m/not found|couldn't find|unknown agent|try \\/help/i\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m   it(\u001b[32m'responds with clarification/help for malformed config update'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toMatch (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/telegram-agent-commands.test.ts\u001b[39m\u001b[0m\u001b[2m:114:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\api\\telegram-agent-commands.test.ts","startTime":1745179285603,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/agents/[id]health"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/[id]health should return status for a valid agent id","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return status for a valid agent id"},{"ancestorTitles":["/api/agents/[id]health"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/[id]health should return 400 for missing/invalid id","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 400 for missing/invalid id"}],"endTime":1745179288851,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\api\\agents_id_health.test.ts","startTime":1745179288297,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Sanity"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Sanity should run a basic test","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should run a basic test"}],"endTime":1745179288965,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\api\\telegram-sanity.test.ts","startTime":1745179288645,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AgentManager modular support"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager modular support deploys a native agent by default","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"deploys a native agent by default"},{"ancestorTitles":["AgentManager modular support"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager modular support deploys a LangChain agent with correct type","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"deploys a LangChain agent with correct type"},{"ancestorTitles":["AgentManager modular support"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager modular support deploys an AutoGen agent with correct type","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"deploys an AutoGen agent with correct type"}],"endTime":1745179288984,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\orchestration\\agentManager.modular.test.ts","startTime":1745179288506,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AgentOrchestrator"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should launch a real agent and reflect health","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should launch a real agent and reflect health"},{"ancestorTitles":["AgentOrchestrator"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should stop a real agent and reflect health","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should stop a real agent and reflect health"},{"ancestorTitles":["AgentOrchestrator"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should list all orchestrated agents","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should list all orchestrated agents"},{"ancestorTitles":["AgentOrchestrator"],"duration":217,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should review a developer implementation with QC Agent","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should review a developer implementation with QC Agent"},{"ancestorTitles":["AgentOrchestrator"],"duration":2019,"failureDetails":[],"failureMessages":[],"fullName":"AgentOrchestrator should auto-recover a crashed agent and reflect live state","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should auto-recover a crashed agent and reflect live state"}],"endTime":1745179289028,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\agentOrchestrator.test.ts","startTime":1745179284207,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AgentManager"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should detect agent crash on missed heartbeat","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect agent crash on missed heartbeat"},{"ancestorTitles":["AgentManager"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should deploy and start an agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should deploy and start an agent"},{"ancestorTitles":["AgentManager"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should persist agent state to memory on stop","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should persist agent state to memory on stop"},{"ancestorTitles":["AgentManager"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should hydrate agent config from persistent memory on deploy","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should hydrate agent config from persistent memory on deploy"},{"ancestorTitles":["AgentManager"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should stop an agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should stop an agent"},{"ancestorTitles":["AgentManager"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should return logs for an agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return logs for an agent"},{"ancestorTitles":["AgentManager"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"AgentManager should update health status correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update health status correctly"}],"endTime":1745179289055,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\agentManager.test.ts","startTime":1745179288559,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["/api/agents/agentLogs API"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/agentLogs API GET returns logs for running agent","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"GET returns logs for running agent"},{"ancestorTitles":["/api/agents/agentLogs API"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/agentLogs API GET returns logs for stopped agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns logs for stopped agent"},{"ancestorTitles":["/api/agents/agentLogs API"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/agentLogs API GET returns empty logs for missing agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns empty logs for missing agent"}],"endTime":1745179289166,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\agents\\[id]logs.test.ts","startTime":1745179288328,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/agent-health API"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"/api/agent-health API returns health for all agents (empty)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns health for all agents (empty)"},{"ancestorTitles":["/api/agent-health API"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"/api/agent-health API returns health for a running agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns health for a running agent"}],"endTime":1745179289203,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\agent-health.test.ts","startTime":1745179288368,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Multi-Agent Collaboration (A2A Protocol)"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"Multi-Agent Collaboration (A2A Protocol) should send and receive agent-to-agent messages using A2A envelopes","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should send and receive agent-to-agent messages using A2A envelopes"},{"ancestorTitles":["Multi-Agent Collaboration (A2A Protocol)"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Multi-Agent Collaboration (A2A Protocol) should persist A2A messages as MCP envelopes for traceability","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should persist A2A messages as MCP envelopes for traceability"}],"endTime":1745179289222,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\multiAgentCollaboration.test.ts","startTime":1745179288427,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/agents/index API"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/index API GET returns empty agent list initially","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns empty agent list initially"},{"ancestorTitles":["/api/agents/index API"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/index API POST adds a new agent","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"POST adds a new agent"},{"ancestorTitles":["/api/agents/index API"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"/api/agents/index API GET returns agent after POST","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"GET returns agent after POST"}],"endTime":1745179289230,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\agents\\index.test.ts","startTime":1745179288515,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"should handle invalid A2A envelopes gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid A2A envelopes gracefully"},{"ancestorTitles":[],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"should log and continue if MCP persistence fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log and continue if MCP persistence fails"},{"ancestorTitles":[],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"should allow agent to process and reply to A2A message","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow agent to process and reply to A2A message"}],"endTime":1745179289242,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\multiAgentCollaboration.extra.test.ts","startTime":1745179288493,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Model Context Protocol Compliance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Compliance should build a valid ModelContextObject","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should build a valid ModelContextObject"},{"ancestorTitles":["Model Context Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Compliance should update ModelContextObject and increment version","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update ModelContextObject and increment version"},{"ancestorTitles":["Model Context Protocol Compliance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Compliance should validate a correct ModelContextObject","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a correct ModelContextObject"},{"ancestorTitles":["Model Context Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Compliance should reject invalid ModelContextObject","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject invalid ModelContextObject"}],"endTime":1745179289293,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\protocols\\modelContextAdapter.test.ts","startTime":1745179288983,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["A2A Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should negotiate protocol version correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should negotiate protocol version correctly"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should default to version 1 if missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should default to version 1 if missing"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should build a valid A2A envelope","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should build a valid A2A envelope"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should parse a valid A2A envelope","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse a valid A2A envelope"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should throw on invalid protocol","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw on invalid protocol"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should support optional fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should support optional fields"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should throw on missing required fields","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw on missing required fields"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should handle unknown/future protocol versions gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle unknown/future protocol versions gracefully"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should handle large and deep payloads","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large and deep payloads"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should reject envelopes with protocol MCP (interoperability check)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject envelopes with protocol MCP (interoperability check)"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should handle missing/invalid signature and threadId fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle missing/invalid signature and threadId fields"},{"ancestorTitles":["A2A Protocol Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Compliance should not crash on random/fuzzed input","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should not crash on random/fuzzed input"}],"endTime":1745179289237,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\protocols\\a2aAdapter.test.ts","startTime":1745179288749,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should negotiate protocol version correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should negotiate protocol version correctly"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should default to version 1 if missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should default to version 1 if missing"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should build a valid MCP envelope","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should build a valid MCP envelope"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should parse a valid MCP envelope","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse a valid MCP envelope"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should return null on invalid MCP envelope","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return null on invalid MCP envelope"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should support optional fields","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should support optional fields"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should throw on missing required fields","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw on missing required fields"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should handle unknown/future protocol versions gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle unknown/future protocol versions gracefully"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should handle large and deep payloads","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large and deep payloads"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should reject envelopes with protocol A2A (interoperability check)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject envelopes with protocol A2A (interoperability check)"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should handle missing/invalid signature and threadId fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle missing/invalid signature and threadId fields"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should not crash on random/fuzzed input","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should not crash on random/fuzzed input"},{"ancestorTitles":["Model Context Protocol (MCP) Envelope Compliance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol (MCP) Envelope Compliance should support optional fields","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should support optional fields"}],"endTime":1745179289314,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\protocols\\mcpAdapter.test.ts","startTime":1745179289008,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["/api/hosts API"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"/api/hosts API GET returns empty host list initially","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"GET returns empty host list initially"},{"ancestorTitles":["/api/hosts API"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"/api/hosts API POST adds a new host","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"POST adds a new host"}],"endTime":1745179289372,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\pages\\api\\hosts\\index.test.ts","startTime":1745179288930,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["supabaseClient"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"supabaseClient creates a client without error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"creates a client without error"}],"endTime":1745179289392,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\utils\\supabaseClient.test.ts","startTime":1745179289102,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["A2A Protocol Adapter"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Adapter should build a valid A2A envelope","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should build a valid A2A envelope"},{"ancestorTitles":["A2A Protocol Adapter"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Adapter should parse a valid A2A envelope","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse a valid A2A envelope"},{"ancestorTitles":["A2A Protocol Adapter"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"A2A Protocol Adapter should throw if not an A2A envelope","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw if not an A2A envelope"}],"endTime":1745179289461,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\protocols\\a2aAdapter.test.ts","startTime":1745179289218,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Telegram orchestration commands"],"duration":7,"failureDetails":[{},{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'publish')\n    at AgentOrchestrator.publish [as sendAgentMessage] (C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\orchestrator\\orchestrator.ts:51:16)\n    at Object.sendAgentMessage (C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\__tests__\\telegramOrchestration.integration.test.ts:34:16)\n    at Promise.then.completed (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\testWorker.js:106:12)","TypeError: bus.clear is not a function\n    at Object.clear (C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\__tests__\\telegramOrchestration.integration.test.ts:20:9)\n    at Promise.then.completed (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:254:5)\n    at _runTestsForDescribeBlock (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Telegram orchestration commands /msg persists A2A message and delivers it in bus","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"/msg persists A2A message and delivers it in bus"},{"ancestorTitles":["Telegram orchestration commands"],"duration":2,"failureDetails":[{},{}],"failureMessages":["TypeError: manager.logs is not a function\n    at Object.logs (C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\__tests__\\telegramOrchestration.integration.test.ts:60:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","TypeError: bus.clear is not a function\n    at Object.clear (C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\__tests__\\telegramOrchestration.integration.test.ts:20:9)\n    at Promise.then.completed (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:254:5)\n    at _runTestsForDescribeBlock (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\santa\\CascadeProjects\\personal-website\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Telegram orchestration commands /logs returns last ten log lines","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"/logs returns last ten log lines"}],"endTime":1745179289617,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTelegram orchestration commands › /msg persists A2A message and delivers it in bus\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'publish')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m   \u001b[36masync\u001b[39m sendAgentMessage(msg\u001b[33m:\u001b[39m \u001b[33mAgentMessage\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m     \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 51 |\u001b[39m       \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mbus\u001b[33m.\u001b[39mpublish(msg)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m     } \u001b[36mcatch\u001b[39m (err) {\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       \u001b[90m// Log error for debugging\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m       \u001b[90m// eslint-disable-next-line no-console\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AgentOrchestrator.publish [as sendAgentMessage] (\u001b[22m\u001b[2msrc/orchestration/orchestrator/orchestrator.ts\u001b[2m:51:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.sendAgentMessage (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/orchestration/__tests__/telegramOrchestration.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:34:16)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTelegram orchestration commands › /msg persists A2A message and delivers it in bus\u001b[39m\u001b[22m\n\n    TypeError: bus.clear is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m     bus\u001b[33m.\u001b[39mclear()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     manager\u001b[33m.\u001b[39mclear()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     jest\u001b[33m.\u001b[39mrestoreAllMocks()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.clear (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/orchestration/__tests__/telegramOrchestration.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:20:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTelegram orchestration commands › /logs returns last ten log lines\u001b[39m\u001b[22m\n\n    TypeError: manager.logs is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 |\u001b[39m     seedLogs(rec\u001b[33m.\u001b[39minstance\u001b[33m,\u001b[39m lines)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 60 |\u001b[39m     \u001b[36mconst\u001b[39m lastTen \u001b[33m=\u001b[39m manager\u001b[33m.\u001b[39mlogs(id)\u001b[33m.\u001b[39mfilter(l \u001b[33m=>\u001b[39m l\u001b[33m.\u001b[39mstartsWith(\u001b[32m'log'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m     expect(lastTen)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m     expect(lastTen[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoContain(\u001b[32m'log 3'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m     expect(lastTen[\u001b[35m9\u001b[39m])\u001b[33m.\u001b[39mtoContain(\u001b[32m'log 12'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.logs (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/orchestration/__tests__/telegramOrchestration.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:60:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTelegram orchestration commands › /logs returns last ten log lines\u001b[39m\u001b[22m\n\n    TypeError: bus.clear is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m     bus\u001b[33m.\u001b[39mclear()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     manager\u001b[33m.\u001b[39mclear()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     jest\u001b[33m.\u001b[39mrestoreAllMocks()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.clear (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/orchestration/__tests__/telegramOrchestration.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:20:9)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\__tests__\\telegramOrchestration.integration.test.ts","startTime":1745179289231,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Model Context Protocol Adapter"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Adapter should build a valid model context object","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should build a valid model context object"},{"ancestorTitles":["Model Context Protocol Adapter"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Adapter should update a model context object","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update a model context object"},{"ancestorTitles":["Model Context Protocol Adapter"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Adapter should validate a correct model context object","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a correct model context object"},{"ancestorTitles":["Model Context Protocol Adapter"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Model Context Protocol Adapter should invalidate an incorrect model context object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should invalidate an incorrect model context object"}],"endTime":1745179290109,"message":"","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\tests\\protocols\\modelContextAdapter.test.ts","startTime":1745179289966,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745179296415,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Jest worker encountered 4 child process exceptions, exceeding retry limit\n\n      \u001b[2mat ChildProcessWorker.initialize (\u001b[22mnode_modules/jest-worker/build/workers/ChildProcessWorker.js\u001b[2m:181:21)\u001b[22m\n","name":"C:\\Users\\santa\\CascadeProjects\\personal-website\\src\\orchestration\\agentManager.factory.test.ts","startTime":1745179296415,"status":"failed","summary":""}],"wasInterrupted":false}
